import asyncio
import aiohttp
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from config import TOKEN, WEATHER_API_KEY
from datetime import datetime

bot = Bot(token=TOKEN)
dp = Dispatcher()


async def get_weather():
    # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS –≤–º–µ—Å—Ç–æ HTTP
    city = "Aktobe"
    country = "KZ"
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city},{country}&appid={WEATHER_API_KEY}&units=metric&lang=ru"

    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    timeout = aiohttp.ClientTimeout(total=10)

    async with aiohttp.ClientSession(timeout=timeout) as session:
        try:
            async with session.get(url) as response:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥—ã
                if response.status == 200:
                    data = await response.json()

                    temperature = data['main']['temp']
                    feels_like = data['main']['feels_like']
                    humidity = data['main']['humidity']
                    pressure = data['main']['pressure']
                    wind_speed = data['wind']['speed']
                    description = data['weather'][0]['description']
                    city_name = data['name']

                    weather_info = (
                        f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city_name}:\n"
                        f"üìù {description.capitalize()}\n"
                        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n"
                        f"üí≠ –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C\n"
                        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                        f"üìä –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞\n"
                        f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n"
                        f"üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M %d.%m.%Y')}"
                    )
                    return weather_info
                elif response.status == 401:
                    return "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π API-–∫–ª—é—á. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á –≤ config.py"
                elif response.status == 404:
                    return "‚ùå –û—à–∏–±–∫–∞: –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω."
                else:
                    return f"‚ùå –û—à–∏–±–∫–∞ API. –ö–æ–¥: {response.status}"

        except aiohttp.ClientConnectorError:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"
        except asyncio.TimeoutError:
            return "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"
        except Exception as e:
            return f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"


# ... –æ—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π) –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π


@dp.message(CommandStart())
async def start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π /weather –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –≤ –ê–∫—Ç–æ–±–µ')


@dp.message(Command('help'))
async def help_command(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: \n/start \n/help \n/weather')


@dp.message(F.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?')
async def aitext(message: Message):
    await message.answer(
        '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç - —ç—Ç–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º—ã–π –º–∞—à–∏–Ω–∞–º–∏, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏.')


@dp.message(F.photo)
async def aiphoto(message: Message):
    await message.answer('–û–≥–æ –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!')


@dp.message(Command('photo'))
async def photo(message: Message):
    await message.answer_photo(
        photo='https://static.tildacdn.com/tild3662-3738-4462-b738-333430386539/e362c0d0-1b30-490f-a.jpg',
        caption='–≠—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather
@dp.message(Command('weather'))
async def weather_command(message: Message):
    await message.answer("‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ...")
    weather_info = await get_weather()
    await message.answer(weather_info)


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())